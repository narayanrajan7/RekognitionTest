'use strict';

var aws = require('aws-sdk');
var cred = new aws.Rekognition({
    accessKeyId: 'Enter Here',
    secretAccessKey: 'Enter Here',
   region: 'us-east-1'
});

//var knoxCopy = require('knox-copy');

exports.handler = (event, context, callback) => {
    // TODO implement
    var rekognition = new aws.Rekognition();
    var s3 = new aws.S3({
    accessKeyId: 'Enter Here',
    secretAccessKey: 'Enter Here',
   region: 'us-east-1'
});
    
    var result;
    console.log(s3.listBuckets
    s3.listBuckets(function(err, data) {
        if (err) console.log(err, err.stack); // an error occurred
         else     {
             result = data.Buckets[1].Name;
             console.log(result);  
         }         successful response
    });
    
    var list = [];
    
    var params = {
        Bucket: "uvahacksrekognition"
    };
    s3.listObjects(params, function(err, data) {
        if (err) console.log(err, err.stack); // an error occurred
        else     {
            for (var x = 0; x <= data.Contents.length - 1; x++) {
                list.push(data.Contents[x].Key);
            }
            //console.log(JSON.stringify(list));
        }
    });
    
    var img = JSON.stringify(list[0]);
     
     var result;
     var pic = {
          SimilarityThreshold: 90, 
          SourceImage: {
           S3Object: {
            Bucket: "bucketname", 
            Name: "dog.png"
           }
          }, 
          TargetImage: {
           S3Object: {
            Bucket: "bucketname", 
            Name: "dog.png"
           }
          }
        };
     rekognition.compareFaces(pic, function(err, data) {
       if (err) console.log(err, err.stack); // an error occurred
       else     {
           result = data
           console.log(data);
           if(data.FaceMatches != null){
               
                callback("Face matches. Similarity: " + JSON.stringify(data.FaceMatches[0].Similarity));
            }
       }
     });
     
     
 
    rekognition.compareFaces(params, function (err, data) {
        if (err) console.log(err, err.stack); // an error occurred
        else     console.log(data);           // successful response
    });
};
